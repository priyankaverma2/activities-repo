-- Create database
create database ecommerce;

use ecommerce;

-- Create table products
CREATE TABLE products (
    product_id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    quantity int NOT NULL,
    description VARCHAR(255) NOT NULL,
    amount double NOT NULL,
    status BOOLEAN NOT NULL,
    image_url VARCHAR(255) NOT NULL,
    category VARCHAR(255) NOT NULL,
    PRIMARY KEY (product_id)
)AUTO_INCREMENT=400;

-- Create table admin
CREATE TABLE admin (
    admin_id INT NOT NULL AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    PRIMARY KEY (admin_id)
)AUTO_INCREMENT=300;

-- Create table employee
CREATE TABLE employee (
    employee_id INT NOT NULL AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    PRIMARY KEY (employee_id)
) AUTO_INCREMENT=200;

-- Create table account
CREATE TABLE account (
    account_number INT NOT NULL AUTO_INCREMENT,
    amount DOUBLE NOT NULL,
    PRIMARY KEY (account_number)
)AUTO_INCREMENT=2000;

-- Create table user
CREATE TABLE user (
    user_id INT NOT NULL AUTO_INCREMENT,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(255) NOT NULL,
    dob DATE NOT NULL,
    address VARCHAR(255) NOT NULL,
    account_number_ref INT NOT NULL,
    funds DOUBLE NOT NULL,
    login_counter int NOT NULL,
    status BOOLEAN NOT NULL,
    PRIMARY KEY (user_id),
    FOREIGN KEY (account_number_ref) REFERENCES account(account_number)
)AUTO_INCREMENT=100;

-- Create table orders
CREATE TABLE orders (
    order_id INT NOT NULL AUTO_INCREMENT,
    user_id_ref INT NOT NULL,
    time_stamp TIMESTAMP NOT NULL,
    status VARCHAR(255) NOT NULL,
    amount DOUBLE NOT NULL,
    PRIMARY KEY (order_id),
    FOREIGN KEY (user_id_ref) REFERENCES user(user_id)
)AUTO_INCREMENT=600;

-- Create table items
CREATE TABLE items (
    item_id INT NOT NULL AUTO_INCREMENT,
    order_id_ref INT NOT NULL,
    product_id_ref INT NOT NULL,
    quantity int NOT NULL,
    price DOUBLE NOT NULL,
    PRIMARY KEY (item_id),
    FOREIGN KEY (order_id_ref) REFERENCES orders(order_id),
    FOREIGN KEY (product_id_ref) REFERENCES products(product_id)
)AUTO_INCREMENT=700;

-- Create table tickets
CREATE TABLE tickets (
    ticket_id INT NOT NULL AUTO_INCREMENT,
    user_id_ref INT NOT NULL,
    time_stamp TIMESTAMP NOT NULL,
    description VARCHAR(255) NOT NULL,
    status BOOLEAN NOT NULL,
    approved_by_ref INT,
    PRIMARY KEY (ticket_id),
    FOREIGN KEY (user_id_ref) REFERENCES user(user_id),
    FOREIGN KEY (approved_by_ref) REFERENCES employee(employee_id)
)AUTO_INCREMENT=800;

-- Create table audit_logs
CREATE TABLE audit_logs (
    audit_log_id INT NOT NULL AUTO_INCREMENT,
    description VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    endpoint VARCHAR(255) NOT NULL,
    time_stamp TIMESTAMP NOT NULL,
    PRIMARY KEY (audit_log_id)
)AUTO_INCREMENT=500;

-- Create table exceptions
CREATE TABLE exceptions (
    exception_id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    endpoint VARCHAR(255) NOT NULL,
    time_stamp TIMESTAMP NOT NULL,
    PRIMARY KEY (exception_id)
)AUTO_INCREMENT=1000;

-- Create table login_logs
CREATE TABLE login_logs (
    log_id INT NOT NULL AUTO_INCREMENT,
    description  VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    time_stamp TIMESTAMP NOT NULL,
    PRIMARY KEY (log_id)
)AUTO_INCREMENT=900;

-- Create table cart
CREATE TABLE cart (
    cart_id INT NOT NULL AUTO_INCREMENT,
    user_id_ref INT NOT NULL,
    product_id_ref INT NOT NULL,
    PRIMARY KEY (cart_id),
    FOREIGN KEY (user_id_ref) REFERENCES user(user_id),
    FOREIGN KEY (product_id_ref) REFERENCES products(product_id)
)AUTO_INCREMENT=3000;

INSERT INTO products (name, quantity, description, amount, status, image_url, category)
VALUES
    ('Pen', 100, 'Blue ink ballpoint pen', 100.00, 1, 'https://png.pngtree.com/png-vector/20210507/ourmid/pngtree-business-equipment-commercial-pen-png-image_3256793.jpg', 'Stationery'),
    ('Bottle', 50, '500ml water bottle', 250.00, 1, 'https://png.pngtree.com/png-clipart/20210309/original/pngtree-3d-metalic-water-bottle-vector-png-image_5884795.jpg', 'Drinkware'),
    ('Notebook', 200, 'A5 ruled notebook', 174.50, 1, 'https://png.pngtree.com/png-vector/20210511/ourmid/pngtree-notebook-business-writing-books-png-image_3265895.jpg', 'Stationery'),
    ('Pencil', 150, 'HB graphite pencil', 14.50, 1, 'https://png.pngtree.com/png-clipart/20190927/ourmid/pngtree-vector-psd-hd-color-pencil-png-image_1746898.jpg', 'Stationery'),
    ('Coffee Mug', 80, 'Ceramic coffee mug', 359.20, 1, 'https://png.pngtree.com/png-clipart/20200727/original/pngtree-coffee-mug-mockup-design-template-png-image_5442616.jpg', 'Drinkware'),
    ('Highlighter', 120, 'Yellow highlighter marker', 179.28, 1, 'https://png.pngtree.com/png-vector/20220917/ourmid/pngtree-school-supplies-highlighter-vector-png-image_6181282.png', 'Stationery');

